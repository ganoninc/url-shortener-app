services:
  # Kafka & Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: no
    depends_on:
      - zookeeper

  # PostgreSQL
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Auth Service
  auth-service:
    build: ./backend/auth-service
    container_name: auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_PORT=8081
      - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}

  # URL Service
  url-service:
    build: ./backend/url-service
    container_name: url-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_URL=kafka:9092
      - DATABASE_USERNAME=${POSTGRESQL_USERNAME}
      - DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - DATABASE_URL=${DATABASE_JDBC_URL}
      - SERVER_PORT=8082
    depends_on:
      - postgres
      - kafka

  # Redirector Service
  redirector-service:
    build: ./backend/redirector-service
    container_name: redirector-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_URL=kafka:9092
      - DATABASE_USERNAME=${POSTGRESQL_USERNAME}
      - DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - DATABASE_URL=${DATABASE_JDBC_URL}
      - SERVER_PORT=8083
    depends_on:
      - postgres
      - kafka

  # Analytics Service
  analytics-service:
    build: ./backend/analytics-service
    container_name: analytics-service
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_URL=kafka:9092
      - DATABASE_USERNAME=${POSTGRESQL_USERNAME}
      - DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - DATABASE_URL=${DATABASE_JDBC_URL}
      - SERVER_PORT=8084
    depends_on:
      - postgres
      - kafka

  api-gateway:
    build: ./backend/api-gateway
    container_name: api-gateway
    ports:
      - "80:80"
      # - "8001:8001"
      # - "8002:8002"
    environment:
      KONG_PROXY_LISTEN: 0.0.0.0:80
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_MANAGER: "on"
      KONG_DATABASE: "off"
      KONG_VAULTS: "env"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PLUGINS: bundled,jwt,jwt-claims-headers
      JWT_SECRET: ${JWT_SECRET}
      KONG_LOG_LEVEL: debug
    volumes:
      - ./backend/api-gateway/kong.yml.template:/kong/declarative/kong.yml.template:ro
      - ./backend/api-gateway/docker-entrypoint.sh:/docker-entrypoint.sh:ro
    entrypoint: ["/docker-entrypoint.sh"]
    depends_on:
      - auth-service
      - url-service
      # - redirector-service
      # - analytics-service

volumes:
  pgdata:
